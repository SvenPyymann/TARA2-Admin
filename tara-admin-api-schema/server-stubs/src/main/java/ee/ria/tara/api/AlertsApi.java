/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.4).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ee.ria.tara.api;

import ee.ria.tara.model.Alert;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.Authorization;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import javax.validation.Valid;
import java.util.List;
import java.util.Optional;

@Validated
@Api(value = "alerts", description = "the alerts API")
public interface AlertsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "Add new alert", nickname = "addAlert", notes = "", response = Alert.class, authorizations = {
        @Authorization(value = "cookieAuth")
    }, tags={ "alerts", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Alert.class),
        @ApiResponse(code = 400, message = "Invalid input") })
    @RequestMapping(value = "/alerts",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Alert> addAlert(@ApiParam(value = "Client object that needs to be added" ,required=true )  @Valid @RequestBody Alert alert) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"start_time\" : \"2000-01-23T04:56:07.000+00:00\",  \"updated_at\" : \"2000-01-23T04:56:07.000+00:00\",  \"end_time\" : \"2000-01-23T04:56:07.000+00:00\",  \"email_alert\" : {    \"send_at\" : \"2000-01-23T04:56:07.000+00:00\",    \"message_templates\" : [ {      \"message\" : \"Seoses SK plaaniliste hooldustöödega on Mobiil-ID teenuste kasutamine häiritud vahemikus 12.01.2020 00:00 kuni 13.01.2020 01:00\",      \"locale\" : \"et\"    }, {      \"message\" : \"Seoses SK plaaniliste hooldustöödega on Mobiil-ID teenuste kasutamine häiritud vahemikus 12.01.2020 00:00 kuni 13.01.2020 01:00\",      \"locale\" : \"et\"    } ],    \"enabled\" : true  },  \"created_at\" : \"2000-01-23T04:56:07.000+00:00\",  \"id\" : \"1234567\",  \"title\" : \"Plaaniline katkestus SK teenustes\",  \"login_alert\" : {    \"auth_methods\" : [ \"idcard\", \"idcard\" ],    \"message_templates\" : [ {      \"message\" : \"Seoses SK plaaniliste hooldustöödega on Mobiil-ID teenuste kasutamine häiritud vahemikus 12.01.2020 00:00 kuni 13.01.2020 01:00\",      \"locale\" : \"et\"    }, {      \"message\" : \"Seoses SK plaaniliste hooldustöödega on Mobiil-ID teenuste kasutamine häiritud vahemikus 12.01.2020 00:00 kuni 13.01.2020 01:00\",      \"locale\" : \"et\"    } ],    \"enabled\" : true  }}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "Delete existing alert", nickname = "deleteAlert", notes = "", authorizations = {
        @Authorization(value = "cookieAuth")
    }, tags={ "alerts", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation"),
        @ApiResponse(code = 400, message = "Invalid input") })
    @RequestMapping(value = "/alerts/{alert_id}",
        method = RequestMethod.DELETE)
    default ResponseEntity<Void> deleteAlert(@ApiParam(value = "Alert ID",required=true) @PathVariable("alert_id") String alertId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "Get all registered alerts", nickname = "getAllAlerts", notes = "", response = Alert.class, responseContainer = "List", authorizations = {
        @Authorization(value = "cookieAuth")
    }, tags={ "alerts", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Alert.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid input") })
    @RequestMapping(value = "/alerts",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Alert>> getAllAlerts() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"start_time\" : \"2000-01-23T04:56:07.000+00:00\",  \"updated_at\" : \"2000-01-23T04:56:07.000+00:00\",  \"end_time\" : \"2000-01-23T04:56:07.000+00:00\",  \"email_alert\" : {    \"send_at\" : \"2000-01-23T04:56:07.000+00:00\",    \"message_templates\" : [ {      \"message\" : \"Seoses SK plaaniliste hooldustöödega on Mobiil-ID teenuste kasutamine häiritud vahemikus 12.01.2020 00:00 kuni 13.01.2020 01:00\",      \"locale\" : \"et\"    }, {      \"message\" : \"Seoses SK plaaniliste hooldustöödega on Mobiil-ID teenuste kasutamine häiritud vahemikus 12.01.2020 00:00 kuni 13.01.2020 01:00\",      \"locale\" : \"et\"    } ],    \"enabled\" : true  },  \"created_at\" : \"2000-01-23T04:56:07.000+00:00\",  \"id\" : \"1234567\",  \"title\" : \"Plaaniline katkestus SK teenustes\",  \"login_alert\" : {    \"auth_methods\" : [ \"idcard\", \"idcard\" ],    \"message_templates\" : [ {      \"message\" : \"Seoses SK plaaniliste hooldustöödega on Mobiil-ID teenuste kasutamine häiritud vahemikus 12.01.2020 00:00 kuni 13.01.2020 01:00\",      \"locale\" : \"et\"    }, {      \"message\" : \"Seoses SK plaaniliste hooldustöödega on Mobiil-ID teenuste kasutamine häiritud vahemikus 12.01.2020 00:00 kuni 13.01.2020 01:00\",      \"locale\" : \"et\"    } ],    \"enabled\" : true  }}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "Update existing alert", nickname = "updateAlert", notes = "", response = Alert.class, authorizations = {
        @Authorization(value = "cookieAuth")
    }, tags={ "alerts", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Alert.class),
        @ApiResponse(code = 400, message = "Invalid input") })
    @RequestMapping(value = "/alerts/{alert_id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<Alert> updateAlert(@ApiParam(value = "Alert ID",required=true) @PathVariable("alert_id") String alertId,@ApiParam(value = "Client object that needs to be added" ,required=true )  @Valid @RequestBody Alert alert) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"start_time\" : \"2000-01-23T04:56:07.000+00:00\",  \"updated_at\" : \"2000-01-23T04:56:07.000+00:00\",  \"end_time\" : \"2000-01-23T04:56:07.000+00:00\",  \"email_alert\" : {    \"send_at\" : \"2000-01-23T04:56:07.000+00:00\",    \"message_templates\" : [ {      \"message\" : \"Seoses SK plaaniliste hooldustöödega on Mobiil-ID teenuste kasutamine häiritud vahemikus 12.01.2020 00:00 kuni 13.01.2020 01:00\",      \"locale\" : \"et\"    }, {      \"message\" : \"Seoses SK plaaniliste hooldustöödega on Mobiil-ID teenuste kasutamine häiritud vahemikus 12.01.2020 00:00 kuni 13.01.2020 01:00\",      \"locale\" : \"et\"    } ],    \"enabled\" : true  },  \"created_at\" : \"2000-01-23T04:56:07.000+00:00\",  \"id\" : \"1234567\",  \"title\" : \"Plaaniline katkestus SK teenustes\",  \"login_alert\" : {    \"auth_methods\" : [ \"idcard\", \"idcard\" ],    \"message_templates\" : [ {      \"message\" : \"Seoses SK plaaniliste hooldustöödega on Mobiil-ID teenuste kasutamine häiritud vahemikus 12.01.2020 00:00 kuni 13.01.2020 01:00\",      \"locale\" : \"et\"    }, {      \"message\" : \"Seoses SK plaaniliste hooldustöödega on Mobiil-ID teenuste kasutamine häiritud vahemikus 12.01.2020 00:00 kuni 13.01.2020 01:00\",      \"locale\" : \"et\"    } ],    \"enabled\" : true  }}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
